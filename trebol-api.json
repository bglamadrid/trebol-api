{
    "openapi": "3.0.1",
    "info": {
        "title": "Tr√©bol API",
        "version": "2.4.0-dev",
        "description": "",
        "contact": {
            "name": "Benjamin La Madrid",
            "email": "bg.lamadrid@gmail.com"
        },
        "license": {
            "name": "GNU GPLv3",
            "url": "https://www.gnu.org/licenses/gpl.txt"
        }
    },
    "paths": {
        "/access/": {
            "summary": "Allowed (authorized) access to API routes",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an array of API routes available for use."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed API routes",
                "description": "GET the API resource paths that the current session is authorized to use."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for API resource accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/access/products": {
            "summary": "Allowed (authorized) access to products API",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizedAcess"
                                },
                                "examples": {
                                    "Read-only": {
                                        "value": {
                                            "permissions": [
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and insert new data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and write data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update"
                                            ]
                                        }
                                    },
                                    "Read, write and delete data (full access)": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update",
                                                "delete"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed products API operations",
                "description": "GET actions that the current session is authorized to do using the products API."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for products API operation accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/access/sales": {
            "summary": "Allowed (authorized) access to sales API",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizedAcess"
                                },
                                "examples": {
                                    "Read-only": {
                                        "value": {
                                            "permissions": [
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and insert new data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and write data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update"
                                            ]
                                        }
                                    },
                                    "Read, write and delete data (full access)": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update",
                                                "delete"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed sales API operations",
                "description": "GET actions that the current session is authorized to do using the sales API."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for sales API operation accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/access/users": {
            "summary": "Allowed (authorized) access to users API",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizedAcess"
                                },
                                "examples": {
                                    "Read-only": {
                                        "value": {
                                            "permissions": [
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and insert new data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and write data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update"
                                            ]
                                        }
                                    },
                                    "Read, write and delete data (full access)": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update",
                                                "delete"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed users API operations",
                "description": "GET actions that the current session is authorized to do using the users API."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for users API operation accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/access/customers": {
            "summary": "Allowed (authorized) access to customers API",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizedAcess"
                                },
                                "examples": {
                                    "Read-only": {
                                        "value": {
                                            "permissions": [
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and insert new data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and write data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update"
                                            ]
                                        }
                                    },
                                    "Read, write and delete data (full access)": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update",
                                                "delete"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed customers API operations",
                "description": "GET actions that the current session is authorized to do using the customers API."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for customers API operation accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/access/salespeople": {
            "summary": "Allowed (authorized) access to salespeople API",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizedAcess"
                                },
                                "examples": {
                                    "Read-only": {
                                        "value": {
                                            "permissions": [
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and insert new data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read"
                                            ]
                                        }
                                    },
                                    "Read and write data": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update"
                                            ]
                                        }
                                    },
                                    "Read, write and delete data (full access)": {
                                        "value": {
                                            "permissions": [
                                                "create",
                                                "read",
                                                "update",
                                                "delete"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an AuthorizedAccess object with an array of available and permitted actions."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Query allowed salespeople API operations",
                "description": "GET actions that the current session is authorized to do using the salespeople API."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for salespeople API operation accesses",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/customers": {
            "summary": "Non-specific-customer API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Customers count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Customer sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Customers page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Customer property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many clients as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List customers",
                "description": "GET a paged collection of customers."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new client is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new customer",
                "description": "POST a new customer entity and save it to the data store"
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific client API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/customers/{id}": {
            "summary": "Specific-customer API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "Normal response; the customer exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific customer",
                "description": "GET the customer identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the customer exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific customer",
                "description": "PUT changes to the customer identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the customer exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific customer",
                "description": "DELETE a customer with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-customer API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/people": {
            "summary": "People API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "People count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "People sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "People page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "People property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many people as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List people",
                "description": "GET a paged collection of people."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for people API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/product_families": {
            "summary": "Product families API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductFamily"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the product families."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all product families",
                "description": "GET every product family available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for product families API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/product_types": {
            "summary": "Product types API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the product types."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all product types",
                "description": "GET every product type available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for product types API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/products": {
            "summary": "Non-specific-product API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Products count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Product sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Products page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Product property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many products as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List products",
                "description": "GET a paged collection of products."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new product is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new product",
                "description": "POST a new product entity and save it to the data store"
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific client API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/products/{id}": {
            "summary": "Specific-product API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": "Normal response; the product exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific product",
                "description": "GET the product identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the product exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific product",
                "description": "PUT changes to the product identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the product exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific product",
                "description": "DELETE a product with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-product API",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sales": {
            "summary": "Non-specific-sell API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Sales count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Sell sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Sales page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Sell property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sell"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many sales as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List sales",
                "description": "GET a paged collection of sales."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sell"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new sell is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new sell",
                "description": "POST a new sell entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific sell API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/sales/{id}": {
            "summary": "Specific-sell API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sell"
                                }
                            }
                        },
                        "description": "Normal response; the sell exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific sell",
                "description": "GET the sell identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sell"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the sell exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific sell",
                "description": "PUT changes to the sell identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the sell exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific sell",
                "description": "DELETE a sell with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-sell API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/sell_types": {
            "summary": "Sell types API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the sell types."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all sell types",
                "description": "GET every sell type available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for sell types API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/sellers": {
            "summary": "Non-specific-seller API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Salespersons count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Salesperson sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Salespersons page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Salesperson property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Salesperson"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many sellers as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List sellers",
                "description": "GET a paged collection of sellers."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Salesperson"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new seller is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new seller",
                "description": "POST a new seller entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific seller API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/sellers/{id}": {
            "summary": "Specific-seller API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salesperson"
                                }
                            }
                        },
                        "description": "Normal response; the seller exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific seller",
                "description": "GET the seller identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Salesperson"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the seller exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific seller",
                "description": "PUT changes to the seller identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the seller exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific seller",
                "description": "DELETE a seller with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-seller API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/users": {
            "summary": "Non-specific-user API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Users count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "User sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Users page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "User property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many users as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List users",
                "description": "GET a paged collection of users."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new user is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new user",
                "description": "POST a new user entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific user API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/users/{id}": {
            "summary": "Specific-user API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Normal response; the user exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific user",
                "description": "GET the user identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the user exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific user",
                "description": "PUT changes to the user identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the user exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific user",
                "description": "DELETE a user with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-user API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/images": {
            "summary": "Non-specific-image API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Images count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Images page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Image"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many images as requested (and available)."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List images",
                "description": "GET a paged collection of customers."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new image is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert a new image",
                "description": "POST a new image entity and save it to the data store"
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific image API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/data/images/{id}": {
            "summary": "Specific-image API endpoint",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": "Normal response; the image exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such image with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "operationId": "getImage",
                "summary": "Find specific Image",
                "description": "GET the image identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Image` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateImage",
                "summary": "Update specific Image",
                "description": "PUT changes to the image identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteImage",
                "summary": "Delete specific Image",
                "description": "DELETE an image with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-image API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "A unique identifier for a `Image`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/data/user_roles": {
            "summary": "User roles API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserRole"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the user roles."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all user roles",
                "description": "GET every user role available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for user roles API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/public/about": {
            "summary": "Info on the shop",
            "description": "Public resource for general information about the company behind the shop.",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopOwnerDetails"
                                }
                            }
                        },
                        "description": "Normal response. Sends an object containing information about the shop."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Request info on the shop",
                "description": "GET general information regarding the company behind the shop."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Preflight check for shop information",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/public/categories": {
            "summary": "Product main categories",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductFamily"
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an array with all main product categories."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "List product main categories",
                "description": "GET the main (bigger) categories where to browse the products available for sale at the shop."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Preflight check for product categories",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/public/categories/{id}": {
            "summary": "Product subcategories within specific main category",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductType"
                                    }
                                }
                            }
                        },
                        "description": "Normal response. Sends an array with the requested subcategories."
                    },
                    "404": {
                        "description": "The specified main category could not be found."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Find and list product subcategories within specific main category",
                "description": "GET the subcategories found within the provided main category ID."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Preflight check for product subcategories",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "The main category identifier",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/public/checkout": {
            "summary": "Payment request",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CartDetail"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "examples": {
                            "Webpay": {
                                "value": "\"webpay\""
                            }
                        },
                        "name": "method",
                        "description": "The payment method requested by the user.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRedirection"
                                }
                            }
                        },
                        "description": "Normal response. The transaction was acknowledged and initiated. Sends details to redirect towards the payment page."
                    },
                    "500": {
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Send a payment request",
                "description": "POST cart details to initiate a virtual transaction in the shop."
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Preflight check for payment request",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/public/checkout/validate": {
            "summary": "Payment confirmation",
            "post": {
                "responses": {
                    "303": {
                        "description": "Normal response; the transaction was approved. \n\n'Location' response header should be included to redirect the user to the result page."
                    },
                    "400": {
                        "description": "Failing response; the transaction was cancelled, rejected or is not a valid transaction."
                    },
                    "500": {
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Send payment result",
                "description": "POST response from the payment method to confirm the transaction end result."
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Preflight check for payment confirmation",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/public/front": {
            "summary": "Available products",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "description": "A normal response, including a paged array of products for sale."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "List available products",
                "description": "GET all products currently on sale at the shop. May accept sorting, ordering, paging and filtering conditions in query parameters."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Preflight check for available products",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "page",
                    "description": "Products page number (1-based)",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "name": "items",
                    "description": "Products count per page",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "Sort by name": {
                            "value": "\"name\""
                        },
                        "Sort by barcode": {
                            "value": "\"barcode\""
                        },
                        "Sort by price": {
                            "value": "\"price\""
                        }
                    },
                    "name": "sortBy",
                    "description": "Product property to sort by",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "examples": {
                        "Ascending order": {
                            "value": "\"asc\""
                        },
                        "Descending order": {
                            "value": "\"desc\""
                        }
                    },
                    "name": "order",
                    "description": "Product sort order (ascending or descending)",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/public/product/{id}": {
            "summary": "Find specific product",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": "A normal response, including an object containing the individual product data."
                    },
                    "404": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The specified product could not be found."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Find specific product",
                "description": "GET complete public information about a specific product, matched by its ID, barcode, or whatever unique property is used to identify it."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Preflight check for specific product",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "The product identifier",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/public/receipt/{id}": {
            "summary": "Fetch details about a transaction",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receipt"
                                }
                            }
                        },
                        "description": "A normal response, including an object containing the individual transaction data."
                    },
                    "404": {
                        "description": "The specified transaction could not be found."
                    },
                    "500": {
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "summary": "Find specific transaction receipt",
                "description": "GET complete public information about a transaction, matched by its ID, code, or whatever unique property is used to identify it."
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for specific transaction receipt",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "The transaction identifier",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/guest": {
            "summary": "Guest session opener",
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "headers": {
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response; a guest token was generated. It is included in the response headers and body."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Response to an improper use; the user was already logged in or using a valid guest token."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Start a guest session",
                "description": "POST personal information to generate a token for a temporary guest session."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "summary": "Preflight check for guest session opener",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/register": {
            "summary": "Account registrar",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "headers": {
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response; the registration was succesful and the user account was created. The user should log in with the input credentials."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "403 response"
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Request a new user account",
                "description": "POST details for a new user account, including its profile information."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "summary": "Preflight check for account registrar",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/login": {
            "summary": "Session opener",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginCredentials"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "headers": {
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response; the credentials are correct, and an authorization token was generated. It is included in the response headers and body."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The credentials were rejected."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {}
                ],
                "summary": "Start a logged-in session",
                "description": "POST credentials to authenticate, generate an authorization token and start a new session."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "summary": "Preflight check for session opener",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/profile": {
            "summary": "User profile information",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": "Normal response. Sends a representation of the profile information."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Response to improper use; the user is not logged in."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Fetch current user's profile",
                "description": "GET the current user's stored profile information"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartialUserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response; the profile was updated successfully."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Response to improper use; the user is not logged in."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Update current user's profile",
                "description": "PUT changes into the current user's profile information."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and PUT methods."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Preflight check for user profile information",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/logout": {
            "summary": "Session closer",
            "post": {
                "responses": {
                    "200": {
                        "headers": {
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response; the session was terminated. Note that sending an expired token in the headers will also trigger this response, and not 403."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Response to improper use; the user is not logged in."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The resource found at this path is having a general malfunction. May be temporally, or permanently, unavailable."
                    }
                },
                "security": [
                    {
                        "AuthorizedRequest": []
                    }
                ],
                "summary": "Terminate current session",
                "description": "POST a request to close the currently opened session."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the POST method."
                    }
                },
                "summary": "Preflight check for session closer",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        }
    },
    "components": {
        "schemas": {
            "Empty": {
                "description": "An object without properties.",
                "type": "object"
            },
            "AbstractEntity": {
                "title": "Root Type for AbstractEntity",
                "description": "Representation of data that has an unique identifier.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 1
                }
            },
            "LoginCredentials": {
                "title": "Root Type for LoginCredentials",
                "description": "Data sent by an user to authenticate itself.",
                "required": [
                    "name",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "an username",
                    "password": "a password"
                }
            },
            "PartialUserProfile": {
                "title": "Root Type for PartialUserProfile",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "idCard": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "phone1": {
                        "type": "integer"
                    },
                    "phone2": {
                        "type": "integer"
                    }
                },
                "example": {
                    "name": "Lorem ipsum dolor sit amet",
                    "idCard": "xxxxxxxxx",
                    "email": "address@example.com",
                    "address": "Excepteur sint occaecat cupidatat non proident",
                    "phone1": 1234567,
                    "phone2": 7654321
                }
            },
            "Person": {
                "title": "Root Type for Person",
                "description": "Personal information about an individual.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "idCard": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "phone1": {
                        "type": "integer"
                    },
                    "phone2": {
                        "type": "integer"
                    }
                },
                "example": {
                    "name": "Lorem ipsum dolor sit amet",
                    "idCard": "xxxxxxxxx",
                    "email": "address@example.com",
                    "address": "Excepteur sint occaecat cupidatat non proident",
                    "phone1": 1234567,
                    "phone2": 7654321
                }
            },
            "UserRegistration": {
                "title": "Root Type for UserRegistration",
                "description": "Credentials and personal information for a new user account.",
                "required": [
                    "password",
                    "profile",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Person",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "idCard": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone1": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "phone2": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "an username",
                    "password": "a password",
                    "profile": {
                        "name": "Lorem ipsum dolor sit amet",
                        "idCard": "xxxxxxxxx",
                        "email": "address@example.com",
                        "address": "Excepteur sint occaecat cupidatat non proident",
                        "phone1": 1234567,
                        "phone2": 7654321
                    }
                }
            },
            "CartDetail": {
                "title": "Root Type for CartDetail",
                "description": "Representation of data about a single product within a shopping cart.",
                "required": [
                    "units",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/Product",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "barcode": {
                                "type": "string"
                            },
                            "price": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "units": {
                        "type": "integer"
                    }
                },
                "example": {
                    "product": {
                        "id": 1,
                        "name": "example product",
                        "barcode": "EXMPL000001",
                        "price": 1000
                    },
                    "units": 1
                }
            },
            "Image": {
                "title": "Root Type for Image",
                "description": "",
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "example": {
                    "filename": "test.png",
                    "url": "http://localhost:80/examplePath"
                }
            },
            "PaymentRedirection": {
                "title": "Root Type for PaymentRedirection",
                "description": "Representation of data used for redirecting the user towards a payment method.",
                "required": [
                    "url",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "example": {
                    "url": "https://payment.com",
                    "token_ws": "a.token.that.the.payment.method.created.and.recognizes"
                }
            },
            "Product": {
                "title": "Root Type for product",
                "description": "A physical item or a service that the shop stocks up on, displays, offers and sells to its customers.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "barcode": {
                        "type": "string"
                    },
                    "productType": {
                        "$ref": "#/components/schemas/ProductType",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "price": {
                        "type": "integer"
                    },
                    "images": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example product",
                    "barcode": "EXMPL00001",
                    "productType": {
                        "id": 1,
                        "name": "example product category"
                    },
                    "price": 1000,
                    "images": [
                        {
                            "url": "http://placeholder.org/example_photo.jpg",
                            "filename": "example_photo.jpg"
                        },
                        {
                            "url": "https://cdn.org/example_hash_uri",
                            "filename": "second_example.png"
                        }
                    ]
                }
            },
            "ProductFamily": {
                "title": "Root Type for ProductFamily",
                "description": "A Product group/category. Each one can be divided into smaller subsets (ProductType).",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example category"
                }
            },
            "ProductType": {
                "title": "Root Type for ProductType",
                "description": "A smaller Product group/category. Belongs to a bigger set (ProductFamily).",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productFamily": {
                        "$ref": "#/components/schemas/ProductFamily",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example child category",
                    "productFamily": {
                        "id": 1,
                        "name": "example category"
                    }
                }
            },
            "Receipt": {
                "title": "Root Type for Receipt",
                "description": "A representation of data about a transaction.",
                "required": [
                    "details",
                    "date",
                    "buyOrder",
                    "amount",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "buyOrder": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "date": {
                        "format": "date",
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReceiptDetail"
                        }
                    }
                },
                "example": {
                    "buyOrder": 1,
                    "amount": 10000,
                    "status": "delivered",
                    "date": "2020-12-25",
                    "details": [
                        {
                            "product": {
                                "id": 1,
                                "name": "example product",
                                "price": 5000
                            },
                            "units": 2
                        }
                    ]
                }
            },
            "ReceiptDetail": {
                "title": "Root Type for CartDetail",
                "description": "Representation of data about a single product within a shopping cart.",
                "required": [
                    "units",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/Product",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "barcode": {
                                "type": "string"
                            },
                            "price": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "units": {
                        "type": "integer"
                    }
                },
                "example": {
                    "product": {
                        "id": 1,
                        "name": "example product",
                        "barcode": "EXMPL000001",
                        "price": 1000
                    },
                    "units": 1
                }
            },
            "ShopOwnerDetails": {
                "title": "Root Type for ShopOwnerDetails",
                "description": "Representation of data about the shop owner - be it an individual or an organization.",
                "required": [
                    "name",
                    "logoImageURL"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "bannerImageURL": {
                        "type": "string"
                    },
                    "logoImageURL": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "example shop owner details",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse arcu eros, semper id interdum ut, molestie ut ex. Nulla lobortis viverra tempor.",
                    "bannerImageURL": "https://example.com/banner.jpg",
                    "logoImageURL": "https://example.com/logo.jpg"
                }
            },
            "Customer": {
                "title": "Root Type for Customer",
                "description": "Store customers. They directly relate to Person's in a one-to-one relationship.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "idCard": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "phone1": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "phone2": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "person": {
                        "name": "Lorem ipsum dolor sit amet",
                        "idCard": "xxxxxxxxx",
                        "email": "address@example.com",
                        "address": "Excepteur sint occaecat cupidatat non proident",
                        "phone1": 1234567,
                        "phone2": 7654321
                    }
                }
            },
            "Salesperson": {
                "title": "Root Type for Salesperson",
                "description": "Store vendors/workers. Like Customers, they relate to Person's in a one-to-one relationship they could, but should not collide.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "idCard": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "phone1": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "phone2": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "person": {
                        "name": "Lorem ipsum dolor sit amet",
                        "idCard": "xxxxxxxxx",
                        "email": "address@example.com",
                        "address": "Excepteur sint occaecat cupidatat non proident",
                        "phone1": 1234567,
                        "phone2": 7654321
                    }
                }
            },
            "SellDetail": {
                "title": "Root Type for SellDetail",
                "description": "Representation of data about a single product within a single sell.",
                "type": "object",
                "properties": {
                    "product": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "barcode": {
                                "type": "string"
                            },
                            "price": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "units": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "product": {
                        "id": 1,
                        "name": "example product",
                        "barcode": "EXMPL000001",
                        "price": 1000
                    },
                    "units": 1
                }
            },
            "SellType": {
                "title": "Root Type for ProductType",
                "description": "",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example sell type"
                }
            },
            "Sell": {
                "title": "Root Type for Sell",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "units": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "sellType": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "details": [
                        {
                            "product": {
                                "id": 1
                            },
                            "units": 1
                        }
                    ],
                    "sellType": {
                        "id": 1
                    }
                }
            },
            "User": {
                "title": "Root Type for User",
                "description": "A representation of data for users of the application that consumes the entire API.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Person",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "an username",
                    "profile": {
                        "id": 1
                    }
                }
            },
            "UserRole": {
                "title": "Root Type for UserRole",
                "description": "A role that holds a list of permissions to do certain tasks in the application ",
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "Administrator",
                    "description": "Authority that holds all power"
                }
            },
            "AuthorizedAcess": {
                "title": "Root Type for AuthorizedAcess",
                "description": "A generic container of API resource paths or actions on a specific resource, for which access is granted",
                "type": "object",
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "routes": [
                        "clients",
                        "products",
                        "people",
                        "sales",
                        "sellers",
                        "users"
                    ]
                }
            }
        },
        "responses": {
            "Empty": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Empty"
                        }
                    }
                },
                "description": "Empty JSON response"
            }
        },
        "securitySchemes": {
            "AuthorizedRequest": {
                "scheme": "bearer",
                "type": "http",
                "description": "Requests including a Bearer token in their Authorization header."
            }
        }
    },
    "security": [
        {}
    ]
}