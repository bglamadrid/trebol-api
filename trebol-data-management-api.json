{
    "openapi": "3.0.1",
    "info": {
        "title": "Trébol Data Management API",
        "version": "2.1.0",
        "description": "Resources to read, write and delete data in varied contexts. Requires authorization tokens. Users can query Trébol Data Access API to acknowledge which resources and operations can they request.",
        "contact": {
            "name": "Benjamin La Madrid",
            "email": "bg.lamadrid@gmail.com"
        },
        "license": {
            "name": "GNU GPLv3",
            "url": "https://www.gnu.org/licenses/gpl.txt"
        }
    },
    "paths": {
        "/customers": {
            "summary": "Non-specific-customer API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Customers count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Customer sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Customers page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Customer property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many clients as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List customers",
                "description": "GET a paged collection of customers."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new client is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new customer",
                "description": "POST a new customer entity and save it to the data store"
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific client API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/customers/{id}": {
            "summary": "Specific-customer API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "Normal response; the customer exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific customer",
                "description": "GET the customer identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the customer exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    }
                },
                "summary": "Update specific customer",
                "description": "PUT changes to the customer identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the customer exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    },
                    "404": {
                        "description": "Empty response; there is no such customer with the provided id route parameter."
                    }
                },
                "summary": "Delete specific customer",
                "description": "DELETE a customer with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-customer API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    }
                }
            }
        },
        "/people": {
            "summary": "People API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "People count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "People sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "People page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "People property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonProfile"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many people as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List people",
                "description": "GET a paged collection of people."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for people API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/product_families": {
            "summary": "Product families API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductFamily"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the product families."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all product families",
                "description": "GET every product family available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for product families API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/product_types": {
            "summary": "Product types API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the product types."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all product types",
                "description": "GET every product type available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for product types API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/products": {
            "summary": "Non-specific-product API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Products count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Product sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Products page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Product property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many products as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List products",
                "description": "GET a paged collection of products."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new product is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new product",
                "description": "POST a new product entity and save it to the data store"
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific client API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/products/{id}": {
            "summary": "Specific-product API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": "Normal response; the product exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific product",
                "description": "GET the product identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the product exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific product",
                "description": "PUT changes to the product identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the product exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such product with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific product",
                "description": "DELETE a product with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-product API",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    }
                }
            }
        },
        "/sales": {
            "summary": "Non-specific-sell API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Sales count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Sell sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Sales page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Sell property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sell"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many sales as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List sales",
                "description": "GET a paged collection of sales."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sell"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new sell is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new sell",
                "description": "POST a new sell entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific sell API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/sales/{id}": {
            "summary": "Specific-sell API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sell"
                                }
                            }
                        },
                        "description": "Normal response; the sell exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific sell",
                "description": "GET the sell identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sell"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the sell exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific sell",
                "description": "PUT changes to the sell identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the sell exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such sell with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific sell",
                "description": "DELETE a sell with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-sell API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    }
                }
            }
        },
        "/sell_types": {
            "summary": "Sell types API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal response, sends an array with all the sell types."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List all sell types",
                "description": "GET every sell type available."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET method."
                    }
                },
                "summary": "Preflight check for sell types API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/sellers": {
            "summary": "Non-specific-seller API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Salespersons count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "Salesperson sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Salespersons page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "Salesperson property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Salesperson"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many sellers as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List sellers",
                "description": "GET a paged collection of sellers."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Salesperson"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new seller is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new seller",
                "description": "POST a new seller entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific seller API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/sellers/{id}": {
            "summary": "Specific-seller API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salesperson"
                                }
                            }
                        },
                        "description": "Normal response; the seller exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific seller",
                "description": "GET the seller identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Salesperson"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the seller exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific seller",
                "description": "PUT changes to the seller identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the seller exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such seller with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific seller",
                "description": "DELETE a seller with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-seller API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    }
                }
            }
        },
        "/users": {
            "summary": "Non-specific-user API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Users count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Ascending order": {
                                "value": "\"asc\""
                            },
                            "Descending order": {
                                "value": "\"desc\""
                            }
                        },
                        "name": "order",
                        "description": "User sort order (ascending or descending)",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "description": "Users page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "description": "User property to sort by",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many users as requested (and available)."
                    },
                    "403": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List users",
                "description": "GET a paged collection of users."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the operation was a success and the new user is stored."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Insert new user",
                "description": "POST a new user entity and save it to the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET and POST methods."
                    }
                },
                "summary": "Preflight check for non-specific user API",
                "description": "Fetch OPTIONS for communicating with this resource."
            }
        },
        "/users/{id}": {
            "summary": "Specific-user API endpoint",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Normal response; the user exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Find specific user",
                "description": "GET the user identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the user exists, the changes are valid and were saved."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Update specific user",
                "description": "PUT changes to the user identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response; the user exists, and its data was erased."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such user with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "Delete specific user",
                "description": "DELETE a user with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-user API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "x-amazon-apigateway-any-method": {
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "400": {
                        "description": "400 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "403": {
                        "description": "403 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "404": {
                        "description": "404 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    },
                    "500": {
                        "description": "500 response",
                        "headers": {
                            "X-Requested-With": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {

                        }
                    }
                }
            }
        },
        "/images": {
            "summary": "Non-specific-image API endpoint",
            "get": {
                "parameters": [
                    {
                        "name": "items",
                        "description": "Images count per page",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Images page number (1-based)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Image"
                                    }
                                }
                            }
                        },
                        "description": "Normal response, sends an array with as many images as requested (and available)."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "summary": "List images",
                "description": "GET a paged collection of customers."
            }
        },
        "/images/{id}": {
            "summary": "Specific-image API endpoint",
            "description": "",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": "Normal response; the image exists and it is sent in the response body."
                    },
                    "403": {
                        "description": "Empty response; the request did not meet the security requirements, or has no authorization to access to this resource, or the API at all."
                    },
                    "404": {
                        "description": "Empty response; there is no such image with the provided id route parameter."
                    },
                    "500": {
                        "description": "The API is having a general malfunction or is unavailable."
                    }
                },
                "operationId": "getImage",
                "summary": "Find specific Image",
                "description": "GET the image identified by a provided id parameter in the route path."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Image` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateImage",
                "summary": "Update specific Image",
                "description": "PUT changes to the image identified by a provided id parameter in the route path."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteImage",
                "summary": "Delete specific Image",
                "description": "DELETE an image with the id parameter, from the data store."
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Normal, empty response, should include CORS headers and only allow the GET, PUT and DELETE methods."
                    }
                },
                "summary": "Preflight check for specific-image API endpoint",
                "description": "Fetch OPTIONS for communicating with this resource."
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "A unique identifier for a `Image`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Empty": {
                "title": "Empty Schema",
                "type": "object"
            },
            "AbstractEntity": {
                "title": "Root Type for AbstractEntity",
                "description": "Representation of data that has an unique identifier.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 1
                }
            },
            "Product": {
                "title": "Root Type for product",
                "description": "A physical item or a service that the shop stocks up on, displays, offers and sells to its customers.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "barcode": {
                        "type": "string"
                    },
                    "productType": {
                        "$ref": "#/components/schemas/ProductType",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "price": {
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example product",
                    "barcode": "EXMPL00001",
                    "productType": {
                        "id": 1,
                        "name": "example product category"
                    },
                    "price": 1000
                }
            },
            "ProductFamily": {
                "title": "Root Type for ProductFamily",
                "description": "A Product group/category. Each one can be divided into smaller subsets (ProductType).",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example category"
                }
            },
            "ProductType": {
                "title": "Root Type for ProductType",
                "description": "A smaller Product group/category. Belongs to a bigger set (ProductFamily).",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productFamily": {
                        "$ref": "#/components/schemas/ProductFamily",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example child category",
                    "productFamily": {
                        "id": 1,
                        "name": "example category"
                    }
                }
            },
            "Customer": {
                "title": "Root Type for Customer",
                "description": "Store customers. They directly relate to PersonProfile's in a one-to-one relationship.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "person": {
                        "$ref": "#/components/schemas/PersonProfile",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "idCard": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "phone1": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "phone2": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "person": {
                        "name": "Lorem ipsum dolor sit amet",
                        "idCard": "xxxxxxxxx",
                        "email": "address@example.com",
                        "address": "Excepteur sint occaecat cupidatat non proident",
                        "phone1": 1234567,
                        "phone2": 7654321
                    }
                }
            },
            "Salesperson": {
                "title": "Root Type for Salesperson",
                "description": "Store vendors/workers. Like Customers, they relate to PersonProfile's in a one-to-one relationship they could, but should not collide.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "person": {
                        "$ref": "#/components/schemas/PersonProfile",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "idCard": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "phone1": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "phone2": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "person": {
                        "name": "Lorem ipsum dolor sit amet",
                        "idCard": "xxxxxxxxx",
                        "email": "address@example.com",
                        "address": "Excepteur sint occaecat cupidatat non proident",
                        "phone1": 1234567,
                        "phone2": 7654321
                    }
                }
            },
            "PersonProfile": {
                "title": "Root Type for PersonProfile",
                "description": "Personal information about an individual.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "idCard": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "phone1": {
                        "type": "integer"
                    },
                    "phone2": {
                        "type": "integer"
                    }
                },
                "example": {
                    "name": "Lorem ipsum dolor sit amet",
                    "idCard": "xxxxxxxxx",
                    "email": "address@example.com",
                    "address": "Excepteur sint occaecat cupidatat non proident",
                    "phone1": 1234567,
                    "phone2": 7654321
                }
            },
            "SellDetail": {
                "title": "Root Type for SellDetail",
                "description": "Representation of data about a single product within a single sell.",
                "type": "object",
                "properties": {
                    "product": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "barcode": {
                                "type": "string"
                            },
                            "price": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "units": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "product": {
                        "id": 1,
                        "name": "example product",
                        "barcode": "EXMPL000001",
                        "price": 1000
                    },
                    "units": 1
                }
            },
            "SellType": {
                "title": "Root Type for ProductType",
                "description": "",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "example sell type"
                }
            },
            "Sell": {
                "title": "Root Type for Sell",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "units": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "sellType": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "example": {
                    "id": 1,
                    "details": [
                        {
                            "product": {
                                "id": 1
                            },
                            "units": 1
                        }
                    ],
                    "sellType": {
                        "id": 1
                    }
                }
            },
            "User": {
                "title": "Root Type for User",
                "description": "A representation of data for users of the application that consumes the entire API.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/PersonProfile",
                        "properties": {
                            "id": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "an username",
                    "profile": {
                        "id": 1
                    }
                }
            },
            "Image": {
                "title": "Root Type for Image",
                "description": "",
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "example": {
                    "filename": "test.png",
                    "url": "http://localhost:80/examplePath"
                }
            }
        },
        "securitySchemes": {
            "AuthorizedRequest": {
                "scheme": "bearer",
                "type": "http",
                "description": "Requests including a Bearer token in their Authorization header."
            }
        }
    },
    "security": [
        {
            "AuthorizedRequest": [
            ]
        }
    ]
}
